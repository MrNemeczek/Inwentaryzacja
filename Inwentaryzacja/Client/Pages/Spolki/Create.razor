@page "/spolki/create"

@using System.Text.Json;
@using Inwentaryzacja.Client.Core

@inject IJSRuntime js
@inject TokenHttpClientService Http
@inject NavigationManager NavigationManager

<h2>Dodaj spółke</h2>
<br/>
@if (spolki == null)
{
    <text>Loading...</text>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col">
                <RadzenCard class="w-50">
                    <EditForm Model="@spolka">
                        <label> Nazwa Spółki </label>
                        <input class="form-control" @bind="@spolka.NazwaSpolka" />
                        <br />

                        <label> NIP </label>
                        <input class="form-control" @bind="@spolka.NIP" />
                        <br />

                        <label> Symbol </label>
                        @*<input class="form-control" oninput="toUpperCase(this)" @bind="@spolka.Symbol" />*@
                        <input class="form-control" @bind="@spolka.Symbol" />
                    </EditForm>
                </RadzenCard>
            </div>
        </div>
    </div>

    <div class="row mt-3">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@Save" value="Save" />
                <input type="button" class="btn" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>


}

@code {

    Spolki spolka = new Spolki();

    Spolki[] spolki { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Http.SetToken();

        IJSObjectReference? module;
        module = await js.InvokeAsync<IJSObjectReference>("import", "./test.js");

        spolki = await Http.GetFromJsonAsync<Spolki[]>("api/spoleczki");
    }

    protected async Task Save()
    {
        if (!spolka.ValidSpolka())
        {
            await Functions.DisplayNotification(notificationService, "Sprawdź czy wszystkie dane są poprawne lub zostały wprowadzone!", NotificationSeverity.Warning);

            return;
        }

        var response = await Http.PostAsJsonAsync("api/spoleczki", spolka);

        if (response.IsSuccessStatusCode)
        {
            await Functions.DisplayNotification(notificationService, "Dodano spółke!", NotificationSeverity.Success);
        }
        else
        {
            await Functions.DisplayNotification(notificationService, "Nie udało się dodać spółki!", NotificationSeverity.Error);

            return;
        }

        NavigationManager.NavigateTo("spolki");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("spolki");
    }
}