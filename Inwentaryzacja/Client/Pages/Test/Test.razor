@page "/test"

@using Inwentaryzacja.Shared.Models

@inject TokenHttpClientService client
@inject IJSRuntime js
@inject ContextMenuService ContextMenuService

<h3>Test</h3>

<br />
<div class="form-group">
    <a class="btn btn-success" href="oddzialy/create"><i class="oi oi-plus"></i> Create New</a>
</div>
@if (oddzialy == null)
{
    <text>Loading...</text>
}
else if (oddzialy.Count() == 0)
{
    <text>No Records Found.</text>
}
else
{
    <label>@test</label>

    <RadzenDataGrid Data="@oddzialy" TItem="Oddzialy" AllowSorting="true" AllowColumnResize="true" AllowPaging="true" class="mt-2"
                CellRender="@CellRender" SelectionMode="DataGridSelectionMode.Single"
                @bind-Value=@selectedOddzialy CellContextMenu="@OnCellContextMenu">
        <Columns>
            <RadzenDataGridColumn TItem="Oddzialy" Property="IdOddzialy" Title="Id" Width="50px"/>

            <RadzenDataGridColumn TItem="Oddzialy" Property="OddzialNazwa" Title="Nazwa Oddziału" />

        </Columns>
    </RadzenDataGrid>

}

@code {

    IEnumerable<Oddzialy> oddzialy { get; set; }
    IList<Oddzialy> selectedOddzialy { get; set; }

    string test = "test";

    protected override async Task OnInitializedAsync()
    {
        await client.SetToken();

        oddzialy = await client.GetFromJsonAsync<IEnumerable<Oddzialy>>("api/oddzialy");

        selectedOddzialy = oddzialy.Take(1).ToList();
    }
    private void CellRender(DataGridCellRenderEventArgs<Oddzialy> args)
    {
        if (args.Column.Property != "IdOddzialy" && args.Column.Sortable == true)
        {
            args.Attributes.Add("style", "border-style: solid; border-color: #e0e0e0;border-width: thin;");//bordery
        }
    }

    void OnCellContextMenu(DataGridCellMouseEventArgs<Oddzialy> args)
    {
        selectedOddzialy = new List<Oddzialy>() { args.Data };

        ContextMenuService.Open(args,
            new List<ContextMenuItem> {
                new ContextMenuItem(){ Text = "Context menu item 1", Value = 1 },
                new ContextMenuItem(){ Text = "Context menu item 2", Value = 2 },
                new ContextMenuItem(){ Text = "Context menu item 3", Value = 3 },
                },
            (e) =>
            {
                test = "hura";
            }
         );
    }

}
